import * as React from 'react'
import { View, TouchableOpacity } from 'react-native'
import { Header, Input, Button, Text } from 'react-native-elements'
import styled from 'styled-components'
import { Wrapper, ButtonRow, ButtonCol } from '../components'
import {sendPushNotification, IToken, getToken} from '../services/api'

const Content = styled(View) <{ color?: string }>`
    height: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: ${c => c.color || 'transparent'};
`;
const GirlScreen: React.FC = () => {
    const [tokenInput, setTokenInput] = React.useState('')
    const [token, setToken] = React.useState<IToken| undefined>()
    return (
        <View>
            <Header
                statusBarProps={{ barStyle: 'light-content' }}
                containerStyle={{
                    backgroundColor: '#3D6DCC',
                    justifyContent: 'space-around',
                }}
                centerComponent={{ text: 'Nh·∫≠p ƒë√°nh gi√°', style: { color: '#fff' } }}
            />
            <Wrapper>
                {token ? (
                    <View>
                        <Text>M√£ s·ªë c·ªßa b·∫°n l√† {token.id} </Text>
                        <Text>Xin vui l√≤ng ch·ªçn ƒë√°nh gi√°</Text>
                    </View>
                ) : (
                    <View>
                        <Input value={tokenInput} onChangeText={setTokenInput} label="M√£ s·ªë nh·∫≠p" placeholder="Vui l√≤ng nh·∫≠p m√£ s·ªë" />
                        <Button onPress={async () => {
                            const result =  await getToken(tokenInput)
                            setToken(result)
                        }} title="X√°c nh·∫≠n m√£ s·ªë"/>
                    </View>
                )}

                {token && (
                <View style={{ marginTop: 10 }}>
                <Text h4>B·∫°n nghƒ© g√¨ v·ªÅ t√¥i ???????</Text>
                <ButtonRow>
                    <ButtonCol>
                        <Content color="#e74c3c">
                            <TouchableOpacity onPress={() => sendPushNotification(token.token, 'B·∫°n ƒë√£ ch·ªçn', 'ƒê·∫πp Trai üòç')}>
                                <Text style={{ fontSize: 14, color: '#fff' }}>ƒê·∫πp Trai üòç</Text>
                            </TouchableOpacity>
                        </Content>
                    </ButtonCol>
                    <ButtonCol>
                        <Content color="#2980b9">
                            <TouchableOpacity onPress={() => sendPushNotification(token.token, 'B·∫°n ƒë√£ ch·ªçn', 'Qu√° ƒê·∫πp Trai üòç')}>
                                <Text style={{ fontSize: 14, color: '#fff' }}>Qu√° ƒê·∫πp Trai üòç</Text>
                            </TouchableOpacity>
                        </Content>
                    </ButtonCol>
                    <ButtonCol>
                        <Content color="#2ecc71">
                            <TouchableOpacity onPress={() => sendPushNotification(token.token, 'B·∫°n ƒë√£ ch·ªçn', 'C·ª±c K·ª≥ ƒê·∫πp Trai üòç')}>
                                <Text style={{ fontSize: 14, color: '#fff' }}>C·ª±c K·ª≥ ƒê·∫πp Trai üòç</Text>
                            </TouchableOpacity>
                        </Content>
                    </ButtonCol>
                    <ButtonCol>
                        <Content color="#f1c40f">
                            <TouchableOpacity onPress={() => sendPushNotification(token.token, 'B·∫°n ƒë√£ ch·ªçn', 'ƒê·∫πp Trai V√£i ƒê·∫°n üòç')}>
                                <Text style={{ fontSize: 14, color: '#fff' }}>ƒê·∫πp Trai V√£i ƒê·∫°n üòç</Text>
                            </TouchableOpacity>
                        </Content>
                    </ButtonCol>
                </ButtonRow>
            </View>
                )}
            </Wrapper>
        </View>
    )
}
export default GirlScreen